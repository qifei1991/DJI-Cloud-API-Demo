server:
  port: 6789
#  servlet:
#    context-path: /cloud-service
spring:
  application:
    name: cloud-api-sample
  datasource:
    druid:
      type: com.alibaba.druid.pool.DruidDataSource
      driver-class-name: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://192.168.20.186:3306/cloud_sample?useSSL=false&allowPublicKeyRetrieval=true
#      url: jdbc:mysql://192.168.1.230:3306/cloud_sample?useSSL=false&allowPublicKeyRetrieval=true
      #      url: jdbc:mysql://192.168.1.202:3306/cloud_sample?useSSL=false&allowPublicKeyRetrieval=true
      username: root
#      password: root
      password: mysql@20.186
#      url: jdbc:mysql://124.70.0.52:3306/cloud_sample?useSSL=false&allowPublicKeyRetrieval=true
#      username: root
#      password: wx@2023
      keep-alive: true  #连接存活配置，防止长时间不操作系统首次点击数据库查询慢的问题；
      initial-size: 10
      min-idle: 10
      max-active: 50
      max-wait: 30000
      #如果需要固定连接池大小，则以上三个参数配置为同一数值
      connection-error-retry-attempts: 3  # 失败后重试连接次数
      time-between-eviction-runs-millis: 60000 # 检测可以关闭的空闲连接间隔时间，默认60*1000L
      min-evictable-idle-time-millis: 300000 # 连接在池中的最小生存时间；默认1000L * 60L * 30L;
      validation-query: select 1
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      pool-prepared-statements: true
      max-open-prepared-statements: 20
      max-pool-prepared-statement-per-connection-size: 20
      filters: wall,slf4j # 配置监控统计拦截的filters, 去掉后监控界面sql无法统计, 'wall'用于防火墙
      aop-patterns: com.springboot.service.* # Spring监控AOP切入点，如com.forestar.xxx.service.*,配置多个英文逗号分隔;好像没鸟用
#      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000 # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      use-global-data-source-stat: true # 合并多个DruidDataSource的监控数据
      # WebStatFilter配置
      web-stat-filter:
        enabled: false
      # StatViewServlet配置
      stat-view-servlet:
        enabled: false
      # 配置StatFilter
      filter:
        stat:
          enabled: false #关闭开启druid的SQL监控，springboot-2.x版本默认是true开启状态
          merge-sql: true # 是否开启sql合并，开启能减少内存占用
          log-slow-sql: true #
      mysql:
        usePingMethod: false

  redis:
    host: 192.168.20.186
    port: 6379
    database: 1
    username: # if you enable
    password: redis_186
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0

  servlet:
    multipart:
      max-file-size: 2GB
      max-request-size: 2GB

jwt:
  issuer: MapzoneUavUser
  subject: CloudApiSample
  secret: CloudApiSample
  age: 86400

mqtt:
  # @see com.dji.sample.component.mqtt.model.MqttUseEnum
  # BASIC parameters are required.
  BASIC:
    protocol: MQTT # @see com.dji.sample.component.mqtt.model.MqttProtocolEnum
    host: 192.168.20.186 #Please enter your ip. # 192.168.1.1
#    host: 124.70.0.52 #Please enter your ip. # 192.168.1.1
    port: 1883
    username: JavaServer
    password: emqx@wrj
#    password: emqx_219
    client-id: CloudService-17 # 123456
    # If the protocol is ws/wss, this value is required.
    path:
    # Topics that need to be subscribed when initially connecting to mqtt, multiple topics are divided by ",".
    inbound-topic: sys/product/+/status,thing/product/+/requests
  DRC:
    protocol: WS # @see com.dji.sample.component.mqtt.model.MqttProtocolEnum
    host: 192.168.1.230 #Please enter your ip.
    port: 8083
    path: /mqtt

url:
  manage:
    prefix: /manage
    version: /api/v1
  map:
    prefix: /map
    version: /api/v1
  media:
    prefix: /media
    version: /api/v1
  wayline:
    prefix: /wayline
    version: /api/v1
  storage:
    prefix: /storage
    version: /api/v1
  control:
    prefix: /control
    version: /api/v1
  # provide api form aircraft-manager service.
  cloud-api:
    prefix: /cloud-api
    version:

aircraft-manager-server:
  url: http://10.10.2.17:82/wrjgl
  cloud-api:
    prefix: /cloud-api
    version:
  workspace-id: e3dea0f5-37f2-4d79-ae58-490af3228069

# Tutorial: https://www.alibabacloud.com/help/en/object-storage-service/latest/use-a-temporary-credential-provided-by-sts-to-access-oss
#oss:
#  enable: true
#  provider: ali # @see com.dji.sample.component.OssConfiguration.model.enums.OssTypeEnum
#  endpoint: https://oss-cn-hangzhou.aliyuncs.com
#  access-key: LTAI5tKJ5pyzUi4f82xvotic # Please enter your access key.
#  secret-key: cK86NSwguGqZ25QHonv1MI5j9wBwLT # Please enter your secret key.
#  expire: 3600
#  region: cn-hangzhou # Please enter your oss region. # cn-hangzhou
#  role-session-name: cloudApi
#  role-arn: acs:ram::1387195511836853:role/ramossrole # Please enter your role arn. # acs:ram::123456789:role/stsrole
#  bucket: aircraft-resource # Please enter your bucket name.
#  object-dir-prefix: test # Please enter a folder name.

#oss:
#  enable: true
#  provider: aws
#  endpoint: https://s3.us-east-1.amazonaws.com
#  access-key:
#  secret-key:
#  expire: 3600
#  region: us-east-1
#  role-session-name: cloudApi
#  role-arn:
#  bucket: aircraft-resource
#  object-dir-prefix: test

oss:
  enable: true
  provider: minio
#  access-key: minio-wrj
#  secret-key: minio@230
#  endpoint: http://192.168.1.230:9000
#  access-key: dlwyminio
#  secret-key: dlwy2021
#  endpoint: http://192.168.1.200:9000
#  extranet-endpoint: http://123.125.92.18:9000
  access-key: minioadmin
  secret-key: minioadmin@186
  endpoint: http://192.168.20.186:9000
  extranet-endpoint: http://121.36.85.75:9000
  bucket: aircraft-resource
  expire: 3600
  region: us-east-1
  object-dir-prefix: cloudApi

#oss:
#  enable: true
#  provider: obs # @see com.dji.sample.component.OssConfiguration.model.enums.OssTypeEnum
#  endpoint: https://obs.cn-north-4.myhuaweicloud.com
#  access-key: MWY2L4ECVSNCHIZ1Z6Z1.
#  secret-key: 0itqHxcD9OMoA2IkKtGw9rLpJzIskLfL802XSUCj.
#  expire: 3600s
#  region: cn-north-4
#  role-session-name: CloudApi
#  role-arn: wrj-obs/Dlwy+Wrj2022/Hw77360206 # IAM用户信息（user_name/user_password/domainName）
#  bucket: aircraft-resource
#  object-dir-prefix: test

logging:
  level:
    com.dji.sample: debug
    com.dji.sample.cloudapi: info
  file:
    name: logs/cloud-api-sample.log

ntp:
  server:
    host: Google.mzr.me

# To create a license for an application: https://developer.dji.com/user/apps/#all
cloud-api:
  app:
    id: 121607 # Please enter the app id.
    key: 9634af17614cefcb133f3e5db8c4e50 # Please enter the app key.
    license: Q798DvMCbkOoUhtMJSTOa9J558re0FhO7G4+ah/JJxzJTWclebjvPYsL0zluvgmkf69CTcUzoO27jXySiI0Z9uRnRnDXRnuOonW8BTb7qZ7al0BPCSkqBar3+YaSfxdVNB3jWfYFVHAj6caBiKHLsAlS5bLE2WiZ2w0rii7y+iw= # Please enter the app license.
